// Auto-generated OpenSCAD file

    inner_points = 10*[[-0.21767207125666155, -0.32071847091711014, 1.7360795183920927], [-1.4922229350476093, -0.9435162185789954, -0.21739691757103918], [-0.46744991045730744, 0.6370588317477957, 1.5936938816719737], [-1.7420007742482555, 0.014261084085910432, -0.35978255429115813], [1.7420007742482542, -0.014261084085911972, 0.35978255429115813], [0.4674499104573061, -0.6370588317477972, -1.5936938816719737], [1.492222935047608, 0.9435162185789938, 0.21739691757103918], [0.21767207125666022, 0.3207184709171086, -1.7360795183920927], [-0.4143597724049588, -1.1803825334804832, 1.2646013664549804], [-0.942296026121513, -1.4383538071774526, 0.4554449329027941], [-1.017376819383404, 1.131896420346253, 0.9208520311981405], [-1.545313073099958, 0.8739251466492834, 0.11169559764595427], [1.5453130730999567, -0.873925146649285, -0.11169559764595427], [1.0173768193834027, -1.1318964203462543, -0.9208520311981405], [0.9422960261215116, 1.4383538071774513, -0.4554449329027941], [0.41435977240495747, 1.1803825334804818, -1.2646013664549804], [0.5329224201734905, -0.9082100060398764, 1.4336533198017478], [-0.7416284436174575, -1.5310077537017615, -0.5198231161613842], [-0.07009462680495482, 1.4040689477868598, 1.089903984544908], [-1.3446454905959027, 0.7812712001249748, -0.8635724514182238], [1.3446454905959013, -0.7812712001249763, 0.8635724514182238], [0.07009462680495349, -1.404068947786861, -1.089903984544908], [0.7416284436174562, 1.5310077537017601, 0.5198231161613842], [-0.5329224201734918, 0.9082100060398749, -1.4336533198017478], [0.43660784939141806, 0.40405282035525075, 1.9520062670457445], [1.584557624473923, 0.5835714012715488, 1.1457901713283336], [1.1872023408215704, -0.18343871476751553, 1.6495800684553996], [0.8339631330437706, 1.1710629363943152, 1.4482163699186787]];

    outer_points = 10*[[-0.2998492432811004, -0.8754891635864159, -1.5191519733455254], [-0.9669049177063294, 1.3048578449672972, -0.7257096161108192], [-0.8810229625548427, -1.3048578449672972, -0.8278635794933151], [-1.5480786369800716, 0.8754891635864159, -0.034421222258608775], [1.5480786369800716, -0.8754891635864159, 0.034421222258608775], [0.8810229625548427, 1.3048578449672972, 0.8278635794933151], [0.9669049177063294, -1.3048578449672972, 0.7257096161108192], [0.2998492432811004, 0.8754891635864159, 1.5191519733455254], [-0.084273448945414, 0.0667291961127105, -1.775572798440574], [-0.36057695615027563, 0.9698584977352651, -1.4469182131126805], [-1.4873509241108964, -0.9698584977352651, -0.10665498249145389], [-1.763654431315758, -0.0667291961127105, 0.2219996028364397], [1.763654431315758, 0.0667291961127105, -0.2219996028364397], [1.4873509241108964, 0.9698584977352651, 0.10665498249145389], [0.36057695615027563, -0.9698584977352651, 1.4469182131126805], [0.084273448945414, -0.0667291961127105, 1.775572798440574], [0.6523481796495847, -0.5718796573528687, -1.5529356304711843], [-0.01470749477564448, 1.6084673512008445, -0.7594932732364776], [-0.7507292955158978, -1.6084673512008445, 0.11598218547793598], [-1.417784969941127, 0.5718796573528687, 0.9094245427126425], [1.417784969941127, -0.5718796573528687, -0.9094245427126425], [0.7507292955158978, 1.6084673512008445, -0.11598218547793598], [0.01470749477564448, -1.6084673512008445, 0.7594932732364776], [-0.6523481796495847, 0.5718796573528687, 1.5529356304711843], [-0.012341624162016562, -1.728782357742436, -1.0841461184935561], [1.0701494658076132, -1.728782357742436, -0.17408401064796336], [0.9398557987686684, -1.4251728515088886, -1.1179297756192146], [0.11795204287692822, -2.0323918639759833, -0.1403003535223048]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([0, 1, 0, 1]) outer_minus_AllTranslationInner(); // Opaque green
    