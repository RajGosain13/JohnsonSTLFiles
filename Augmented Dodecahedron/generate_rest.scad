// Auto-generated OpenSCAD file

    inner_points = 10*[[0.0998930354475761, -0.08761839771919257, 1.3956184279718415], [0.6728697039772034, -0.5090233371692008, -1.1239485150914914], [-0.6716026362296299, 0.487698807845633, 1.1239485150914914], [-0.0986259677000027, 0.06629386839562477, -1.3956184279718415], [-0.8908119004872508, -0.979928839088502, 0.47892884316814505], [-0.6719542878696155, -1.1408912029313139, -0.48346009215137703], [0.673221355617189, 1.1195666736077459, 0.48346009215137703], [0.8920789682348242, 0.9586043097649343, -0.47892884316814505], [0.7118307070376008, -1.1647302272134858, 0.35475514127068664], [-1.3079711835867545, 0.3414697712678377, -0.35648592437079285], [1.3092382513343277, -0.36279430059140544, 0.35648592437079285], [-0.7105636392900273, 1.1434056978899179, -0.35475514127068664], [-0.035585740512491165, -0.9946621663535183, 0.9969743473109073], [0.3185333153995008, -1.2551047419607149, -0.5602036604329037], [-1.28389195945964, -0.06377937343702057, 0.5574031945497779], [-0.9297729035476481, -0.3242219490442169, -0.999774813194033], [0.9310399712952215, 0.30289741972064915, 0.999774813194033], [1.2851590272072133, 0.04245484411345278, -0.5574031945497779], [-0.31726624765192735, 1.2337802126371469, 0.5602036604329037], [0.03685280826006457, 0.9733376370299506, -0.9969743473109073], [0.8878158417756826, -0.674182307300777, 1.208213968994985]];

    outer_points = 10*[[0.03282366802055475, -1.3176403726430708, 0.4756805091246931], [-0.08493614308928757, 0.6642367211098263, -1.2308943583788188], [0.08493614308928757, -0.6642367211098263, 1.2308943583788188], [-0.03282366802055475, 1.3176403726430708, -0.4756805091246931], [-1.283421516714085, -0.3785048441443724, 0.4160394031302599], [-1.3284017620492774, 0.3785048441443724, -0.2358141919097333], [1.3284017620492774, -0.3785048441443724, 0.2358141919097333], [1.283421516714085, 0.3785048441443724, -0.4160394031302599], [-0.5670299754236185, -0.8553164840436631, -0.9541678105326641], [-0.43059774445579446, 0.8553164840436631, 1.0230077155892763], [0.43059774445579446, -0.8553164840436631, -1.0230077155892763], [0.5670299754236185, 0.8553164840436631, 0.9541678105326641], [-0.8128678745041953, -1.141048361009117, -0.027927549120190846], [-0.8856474402788453, 0.0838190444550353, -1.0826488215837096], [-0.728548118605104, -0.0838190444550353, 1.194034127747624], [-0.8013276843797541, 1.141048361009117, 0.1393128552841052], [0.8013276843797541, -1.141048361009117, -0.1393128552841052], [0.728548118605104, 0.0838190444550353, -1.194034127747624], [0.8856474402788453, -0.0838190444550353, 1.0826488215837096], [0.8128678745041953, 1.141048361009117, 0.027927549120190846], [-0.033902923914046645, -1.5635173407451266, -0.4913210826453173]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([1, 1, 0, 1]) outer_minus_inner_diff(); // Opaque yellow
    