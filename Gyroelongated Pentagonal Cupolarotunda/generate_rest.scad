// Auto-generated OpenSCAD file

    inner_points = 10*[[0.9785360441964507, 0.9685060087804973, -0.7092049571073851], [-0.7218333121630555, -0.9371211507350073, 1.2781211700972077], [-1.1656165136305032, 1.3079692585994611, 0.41648198007898896], [0.12642830900148935, -1.3068898411312557, -0.9853981930688116], [-0.22333094402334933, 1.5535674106354085, 0.6440329700277245], [1.005476703886223, -0.9333113753571688, -0.6892343037094695], [-0.7487739718528278, 0.9646962334026586, 1.2581505166992923], [0.4800336760567444, -1.5221825525899184, -0.07511675703790183], [0.08934767207892022, 1.3107372224336087, -1.012885439345699], [0.48861147976637076, 0.5027013227208416, -1.446090236925663], [-1.5277996843953847, -0.5016219052526364, 0.8771740239358404], [-1.128535876707934, -1.309657804965403, 0.4439692263558762], [0.43644277299934864, 1.5550226153402404, -0.10742995301327285], [1.1958876650432781, 0.018046999695751874, -0.9314344442707686], [-0.939184933009883, 0.013337858349738127, 1.5003506572605914], [-0.17974004096595367, -1.5236377572947502, 0.6763461660030955], [-0.5425111962571489, 1.6183222038887703, -0.3014461589511666], [0.5027750227462976, -0.4971432456893552, -1.4355910431050312], [-1.5419632273753114, 0.4982226631575605, 0.8666748301152085], [-0.4966770083718649, -1.617242786420565, -0.2674700540386561], [1.4826091915535184, 0.7286877016062595, 0.809489031294333], [0.6324245133737653, -0.22412587815149274, 1.8031520948966295], [1.6999608124003458, -0.22177130747848592, 0.5872595441309494], [1.1745177845708672, -0.8106424847112358, 1.2013770908025172], [0.8228354745308205, 0.7272324969014278, 1.5609519543353303], [1.6251024487516763, 0.45780294600218496, -0.14251785987525334], [0.24947474274244444, -1.083881810988317, 1.4652627503986109], [0.7479771108821508, 1.4068067503820987, 0.8311745503291275], [-0.10220756729760253, 0.45399317062434624, 1.824837613931424], [1.317011041769025, -1.0815272403153102, 0.2493701996329309], [-1.0994824342008114, 0.7998110906252263, -0.4422389058083036], [-0.453460022884815, -0.5076184592401323, -1.1431789923822038], [-1.4758291479456198, -0.00993550481667447, 0.007953944227915899], [-1.0765653402581692, -0.8179714045294413, -0.42525085335204815], [-0.4676235658647422, 0.4922261091700644, -1.1536781862028358]];

    outer_points = 10*[[1.6675078734833215, 0.0606578658798944, -0.14037183476169734], [-1.3812010323162374, 0.0606578658798944, 0.9447594765080658], [-0.21947760683013753, 1.5412866403759968, -0.6166289071353418], [-0.0668292343369466, -1.6626023721357857, -0.1877587346110266], [0.5416162372999497, 1.5841976272977822, 0.030591926605881947], [0.6867934666614489, -1.4628818955379934, 0.4384716988297587], [-0.40048662549436476, 1.5841976272977822, 0.36591594291660967], [-0.2553093961328655, -1.4628818955379934, 0.7737957151404864], [1.2830083443582905, 0.43437021059876024, -0.9844685090279552], [1.3301792856223638, -0.5556859423585491, -0.8519403373374261], [-1.616486126789448, 0.43437021059876024, 0.047552695591057736], [-1.5693151855253746, -0.5556859423585491, 0.1800808672815868], [1.3315198473616163, 1.0022572216480545, -0.16279279637858096], [1.421244309499562, -0.8809414898882658, 0.08929076617934018], [-1.1349374683324778, 1.0022572216480545, 0.7150968755670284], [-1.0452130061945322, -0.8809414898882658, 0.9671804381249495], [0.6910920823419752, 1.2353424637267059, -0.8945875406321075], [0.814587209852644, -1.3566581954864947, -0.5476242826794208], [-1.100894051019728, 1.2353424637267059, -0.25676335906694764], [-0.9773989235090593, -1.3566581954864947, 0.09019989888573907], [1.3498755222367103, 0.5145289147819359, 1.3798731287754311], [-0.1744789306630692, 0.5145289147819359, 1.9224387844103128], [1.1036119582529507, -0.4270704409862244, 1.6095357297164685], [0.16150909545863612, -0.4270704409862244, 1.9448597460271964], [0.5599719121750438, 1.0964693204316633, 1.573257851759894], [1.6788523044425723, -0.24077480503880566, 0.8130481402697834], [-0.7876050112515218, -0.24077480503880566, 1.6909378122153926], [1.1352122583646653, 1.2827649563790822, 0.7767702623132089], [-0.38914219453511406, 1.2827649563790822, 1.3193359179480906], [0.4904858776644981, -1.182374160806966, 1.3780347575215486], [-0.10820638536813701, 0.6663583620181512, -1.0879241680961655], [-0.03188219912154147, -0.93558614423774, -0.8734890818340078], [-0.9896228295577276, 0.3604141853688603, -0.7280586200277711], [-0.9424518882936543, -0.629641967588449, -0.595530448337242], [0.483709876648178, -0.13461389110979438, -1.177805136492013]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([1, 1, 0, 1]) outer_minus_inner_diff(); // Opaque yellow
    