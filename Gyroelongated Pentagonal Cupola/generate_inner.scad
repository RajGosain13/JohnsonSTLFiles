// Auto-generated OpenSCAD file

    inner_points = 10*[[0.0981256772482181, 1.6457575604228036, -0.49999971188637654], [-1.0832035552174737, -1.1961778079047776, 0.5000005689987711], [-0.1274890829740991, 1.102996499198401, -1.309016652616536], [0.09812663002150081, 1.6457572632118638, 0.5000002881131254], [-1.0832045079907566, -1.1961775106938377, -0.49999943100073085], [-0.8575887949951567, -0.6534167466803746, 1.3090175097289307], [-0.4925404806041831, 0.22479035715641538, -1.618033560192892], [-0.127486588581261, 1.1029957210900594, 1.3090173361320547], [-0.8575912893879948, -0.6534159685720329, -1.3090164790196603], [-0.4925373973650727, 0.224789395361611, 1.6180344173052863], [0.8062478731875907, 1.1025170792040677, -0.951057064318678], [0.9248610728923187, 1.3878632992834963, -5.762265201658678e-07], [-0.317262991238858, -1.6003240717335458, -2.808858743374998e-07], [-0.19864979153413004, -1.314977851654117, 0.9510562072062835], [0.495716297128712, 0.3554704111460145, -1.5388422427756967], [0.8062496854700688, 1.102516513875266, 0.951055968270682], [-0.19865160381660824, -1.3149772863253153, -0.9510568253830763], [0.11188178452474858, -0.5679311835960638, 1.5388413856633023], [0.1118788521901014, -0.5679302688748477, -1.538842151510418], [0.4957192294633592, 0.3554694964247984, 1.5388412943980236], [-0.7138464220032689, 1.0620613123307217, -0.4999991117419643], [-1.3045110382361147, -0.3589063718330689, 1.0287006094733542e-06], [-0.7138454692299859, 1.062061015119782, 0.5000008882575375], [-1.0788962780137976, 0.18385468939133373, 0.8090179694307691], [-1.0788978196333527, 0.183855170288736, -0.8090160193183198]];

    outer_points = 10*[[-1.6409889130468513, -0.11555950142177197, -0.3126779904387301], [1.5886524541888336, -0.11555950142177197, -0.5165225244336256], [-1.348640822211601, 0.8007073739998204, -0.5865166414544996], [-1.3165303884764263, -1.0318263768433644, -0.07777018120554417], [1.2641939296184086, 0.8007073739998204, -0.7514303336668116], [1.2963043633535833, -1.0318263768433644, -0.24268387341785624], [-0.5511531501235996, 1.3669914457760302, -0.7946890769982492], [-0.4991973769465854, -1.5981104486195743, 0.028479987340757858], [0.4468609180885676, 1.3669914457760302, -0.8576805022131136], [0.4988166912655817, -1.5981104486195743, -0.03451143787410652], [-1.5180582313930455, 0.5972695048350894, 0.3778021724529971], [-1.5011767773548241, -0.3661505019915455, 0.6452660147863529], [1.5535132362128419, 0.5972695048350894, 0.1839345000860028], [1.5703946902510633, -0.3661505019915455, 0.4513983424193586], [-0.9450976637241996, 1.376692663078665, 0.12439394786230915], [-0.9009014432726172, -1.1455736602351207, 0.8246233778526778], [0.9532379021306351, 1.376692663078665, 0.004577137019677928], [0.9974341225822174, -1.1455736602351207, 0.7048065670100466], [-0.001146536984352193, 1.674405817908923, -0.018165330220834972], [0.05348299584236998, -1.4432868150653788, 0.8473658450931907], [-0.8699212728256985, -0.0032034345028971734, -0.9394401530094331], [0.744899410792144, -0.0032034345028971734, -1.0413624200068807], [-0.5454627482552734, -0.9194703099244896, -0.704532343776247], [0.4525513199568937, -0.9194703099244896, -0.7675237689911114], [-0.07243360073769692, 0.5630806372733126, -1.1476125885531827]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    