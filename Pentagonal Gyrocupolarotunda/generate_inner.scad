// Auto-generated OpenSCAD file

    inner_points = 10*[[1.6796923234637004e-13, 6.070021975389176e-13, -1.618033988749895], [-1.6796923234637004e-13, -6.070021975389176e-13, 1.618033988749895], [1.3099900587145907, 0.9497157652786637, 4.92274937759846e-13], [0.9497157652786637, -1.3099900587145907, -3.9284948324472034e-13], [0.948473340654347, 0.0700486920347792, -1.3090169943748227], [0.9484733406540753, 0.07004869203379704, 1.3090169943750722], [0.3615167180605155, 0.8796670732448667, -1.3090169943745797], [0.36151671806024377, 0.8796670732438845, 1.3090169943753152], [-0.36151671806024377, -0.8796670732438845, -1.3090169943753152], [-0.3615167180605155, -0.8796670732448667, 1.3090169943745797], [1.5346621026017229, 0.11334116457913979, -0.49999999999979816], [1.5346621026016192, 0.11334116457876464, 0.5000000000002018], [0.5849463373230591, 1.4233312232937305, -0.49999999999940536], [0.5849463373229553, 1.4233312232933555, 0.5000000000005946], [-0.5849463373229553, -1.4233312232933555, -0.5000000000005946], [-0.5849463373230591, -1.4233312232937305, 0.49999999999940536], [1.173145384541375, -0.7663259086651197, -0.8090169943751132], [1.1731453845412072, -0.766325908665727, 0.8090169943747817], [0.36352700333128773, -1.3532825312589511, -0.8090169943754174], [0.36352700333111987, -1.3532825312595584, 0.8090169943744775], [-0.1629176159415796, 0.9866396760803366, 3.5322329978742213e-13], [-0.7478639532645349, -0.4366915472130185, -0.5000000000002415], [-0.7478639532646387, -0.4366915472133937, 0.4999999999997586], [-0.3863472352041232, 0.4429755260314729, -0.8090169943748214], [-0.38634723520429115, 0.44297552603086593, 0.8090169943750735]];

    outer_points = 10*[[0.3292875792170331, 0.6516523075520398, 1.4439366152935462], [-0.3292875792170331, -0.6516523075520398, -1.4439366152935462], [1.5775331980706784, 0.0, -0.35975407952487837], [-0.14488853615168673, 1.4810075147722905, -0.6353408864772672], [1.0103928266975255, 0.9848542820948938, 0.7919610896675606], [0.4775943314511925, -0.06954130037160627, -1.5443774314778784], [1.0999388666194858, 0.06954130037160627, 1.184623351953], [0.5671403713731528, -0.9848542820948938, -1.151715169192439], [-0.5671403713731528, 0.9848542820948938, 1.151715169192439], [-1.0999388666194858, -0.06954130037160627, -1.184623351953], [1.3055623563686454, 0.9418753948433755, -0.16251665444403007], [1.1020514403393455, 0.5391321199289151, -1.0549185602959228], [1.450450892520332, -0.5391321199289151, 0.4728242320332371], [1.2469399764910323, -0.9418753948433755, -0.41957767381865574], [-1.2469399764910323, 0.9418753948433755, 0.41957767381865574], [-1.450450892520332, 0.5391321199289151, -0.4728242320332371], [0.5349110689661927, 1.523986402023809, 0.09679660889651609], [0.20562348974915956, 0.8723340944717692, -1.34714000639703], [-0.4400580658228066, 1.523986402023809, 0.31913685763432353], [-0.7693456450398397, 0.8723340944717692, -1.1247997576592228], [0.5161118652230368, -0.8186808191285174, 0.25177422220524803], [-0.7308281112679954, 0.12319457571485803, 0.6713518960239038], [-0.9343390272972953, -0.27954869919960235, -0.22105000982798903], [0.16559983932219047, -0.21000739882799596, 0.9635733421250111], [-0.16368773989484264, -0.8616597063800358, -0.48036327316853505]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    