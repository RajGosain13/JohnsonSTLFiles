// Auto-generated OpenSCAD file

    inner_points = 10*[[-1.7845387792055995e-15, -1.859095349230593e-15, -1.618033988749895], [1.7845387792055995e-15, 1.859095349230593e-15, 1.618033988749895], [-1.3536265463755464, 0.7319352168718941, -0.49999999999999933], [-1.3536265463755455, 0.7319352168718953, 0.5000000000000007], [1.3536265463755455, -0.7319352168718953, -0.5000000000000007], [1.3536265463755464, -0.7319352168718941, 0.49999999999999933], [-0.8365872137342245, 0.45236084158985485, -1.309016994374947], [-0.8365872137342216, 0.4523608415898579, 1.309016994374948], [0.8365872137342216, -0.4523608415898579, -1.309016994374948], [0.8365872137342245, -0.45236084158985485, 1.309016994374947], [-0.9983252747658171, -0.0578502010692763, 1.1675275179479784e-15], [-0.49820742844767774, 0.8670578747924227, -4.467599515296164e-16], [-0.48128594212449544, -0.3374245763513155, -0.8090169943749466], [0.018831904193644222, 0.5874834995103835, -0.8090169943749481], [-0.4812859421244936, -0.3374245763513135, 0.8090169943749483], [0.018831904193646, 0.5874834995103853, 0.8090169943749468], [0.35530127160972824, -0.7897854179411714, -0.4999999999999995], [0.8554191179278678, 0.13512265792052747, -0.5000000000000011], [0.3553012716097293, -0.7897854179411703, 0.5000000000000006], [0.8554191179278688, 0.13512265792052863, 0.4999999999999989]];

    outer_points = 10*[[-1.4881280115199031, 0.0, -0.6352235906196446], [1.4881280115199031, 0.0, 0.6352235906196446], [-0.10491467048796077, -1.2452425677866739, -1.0278121657376647], [0.8147990202421345, -1.2452425677866739, -0.6352223962789754], [-0.8147990202421345, 1.2452425677866739, 0.6352223962789754], [0.10491467048796077, 1.2452425677866739, 1.0278121657376647], [-0.9845545230101506, -0.7696022311303593, -1.027812621935206], [1.423287179239848, -0.7696022311303593, 7.381431278430384e-07], [-1.423287179239848, 0.7696022311303593, -7.381431278430384e-07], [0.9845545230101506, 0.7696022311303593, 1.027812621935206], [0.36322496660595616, -0.37947419135933846, -0.8509212429633416], [0.029189450705503803, -0.9972321321950521, -0.06838165313313897], [-0.5164148859162335, 0.09616614529697598, -0.8509216991608831], [-0.8504504018166859, -0.5215917955387377, -0.06838210933068053], [0.9717131256036696, 0.09616614529697598, -0.2156981085412385], [0.6376776097032173, -0.5215917955387377, 0.566841481288964], [-0.45157405363617825, 0.8657683764273354, -0.21569884668436626], [-0.7856095695366306, 0.24801043559162173, 0.5668407431458362], [0.468139637093917, 0.8657683764273354, 0.17689092277432297], [0.1341041211934646, 0.24801043559162173, 0.9594305126045255]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([0, 1, 0, 1]) outer_minus_AllTranslationInner(); // Opaque green
    