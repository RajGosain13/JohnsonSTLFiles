// Auto-generated OpenSCAD file

    inner_points = 10*[[-1.2800868421421776, 0.9300375234937233, -0.4999999999986175], [1.00952842451697, -1.126609720368595, 0.4999999999986175], [0.7495811565537936, 0.25032633822332373, -1.309016994373636], [0.5889249096677321, 1.1013196227617108, 0.8090169943779234], [-0.39522647677644196, 1.2786499601524015, -0.8090169943722536], [-1.2800868421428393, 0.930037523491642, 0.5000000000013824], [-0.8428092367899453, 0.5372528513524985, -1.309016994374093], [1.4571111845311355, -0.3852126115666106, 4.568012634820207e-13], [0.572250819164738, -0.7338250482273702, 1.309016994374093], [1.0095284245176321, -1.1266097203665137, -0.5000000000013824], [0.15164730431657092, 1.494104294906303, 3.5040581547463034e-12], [-0.3952264767775129, 1.2786499601490338, 0.8090169943776411], [1.2964549376461445, 0.46578067297514414, 0.5000000000021215], [0.7495811565520609, 0.25032633821787476, 1.3090169943762586], [0.5889249096688031, 1.1013196227650786, -0.8090169943719714], [-0.8428092367916781, 0.5372528513470497, 1.3090169943758017], [-0.13527920881153285, -0.09828609843406824, -1.6180339887498947], [1.2964549376468066, 0.4657806729772256, -0.49999999999787836], [-0.13527920881367453, -0.09828609844080341, 1.6180339887498947], [0.5722508191664707, -0.7338250482219214, -1.3090169943758017]];

    outer_points = 10*[[1.6180339861193813, 0.0, 9.226332282866825e-05], [-1.6180339861193813, 0.0, -9.226332282866825e-05], [4.8497926242127776e-05, 1.3764661599662604, -0.8505144895094868], [7.848867363894099e-05, -0.850514490892208, -1.3764661577284751], [1.3090654955439587, 0.4254096483352815, -0.8505340370787032], [1.3090169976177166, -0.9510565116309789, -1.9547569216365145e-05], [1.309016986875918, 0.9510565116309789, 0.00016883276146815448], [-1.308968488949676, 0.4254096483352815, -0.850683322270955], [-1.309016986875918, -0.9510565116309789, -0.00016883276146815448], [-1.3090169976177166, 0.9510565116309789, 1.9547569216365145e-05], [0.8090954784139313, -0.2627292414823533, -1.3763618133434734], [0.8090655050471297, -1.113432112705552, -0.8507149509023446], [-0.8089385077054501, -0.2627292414823533, -1.3764540766663023], [-0.8089684810722516, -1.113432112705552, -0.8508072142251732], [0.5000784791704679, 0.6883272701486257, -1.3762852439048336], [0.5000000078774243, -1.5388417610408336, -0.00012389195421817631], [0.49999999049682897, 1.5388417610408336, 0.00018091382364129736], [-0.4999215192037853, 0.6883272701486257, -1.3763422657742568], [-0.49999999049682897, -1.5388417610408336, -0.00018091382364129736], [-0.5000000078774243, 1.5388417610408336, 0.00012389195421817631]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    