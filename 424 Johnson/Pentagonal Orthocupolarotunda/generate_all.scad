// Auto-generated OpenSCAD file

    inner_points = 10*[[0.9299608274506113, -0.36625251042878015, 1.3090169944285586], [-0.9300308766981566, 0.03182392530465242, -1.3090169944285586], [1.266848278790813, 0.4315612808941218, -0.8090169942043599], [-0.38493553047389745, 1.3227137557713289, 0.5000000001356605], [-3.5024755881594054e-05, -0.16721429274351698, 1.618033988749895], [-1.5047999228086544, 0.15483630882503643, -0.5000000000867447], [1.5047298735611092, -0.48926489394916417, 0.5000000000867447], [-3.502449166371223e-05, -0.16721429238061072, -1.618033988749895], [1.2668482786587043, 0.43156128071266875, 0.809016994545535], [-0.2379166193940685, 0.753611882281222, -1.3090169942911047], [-0.9300308769119134, 0.03182392501105499, 1.3090169943213361], [-1.504799922890302, 0.15483630871289225, 0.4999999999132554], [1.5047298736427568, -0.48926489383702, -0.4999999999132554], [0.929960827664368, -0.3662525101351827, -1.3090169943213361], [1.1198293677926323, 1.0006631544963729, 2.224050943411271e-10], [0.5450603218142434, 1.12367553819821, -0.8090169941856757], [-0.23791661960782534, 0.7536118819876247, 1.3090169944587902], [-1.1679124716822094, 0.952650099854341, 3.023159500514794e-11], [0.5450603216821343, 1.123675538016757, 0.8090169945642192], [-0.38493553039224954, 1.3227137558834732, -0.4999999998643395], [-0.7830119659137325, -0.5372779485911959, 0.4999999998945711], [0.1469838862422994, -0.7363161663457679, 0.8090169943231298], [-0.7830119658320847, -0.5372779484790517, -0.500000000105429], [0.7217529323527971, -0.859328549866152, -1.86841930815973e-11], [0.14698388637440846, -0.7363161661643148, -0.8090169944267651]];

    outer_points = 10*[[0.0003389073222320645, 1.6180338602780315, 0.0005485303033235351], [-0.0003389073222320645, -1.6180338602780315, -0.0005485303033235351], [-1.376497554636943, 0.0, 0.8504636798996249], [0.8504636123728273, -0.0006447818753087883, 1.376497445343067], [0.9513306684223868, 1.3088176418818913, 0.0005730337122140106], [0.950782304855979, -1.309216138996162, -0.0003145069624228003], [-0.950782304855979, 1.309216138996162, 0.0003145069624228003], [-0.9513306684223868, -1.3088176418818913, -0.0005730337122140106], [-0.4251668862145562, 1.3088176418818913, 0.8510367136118389], [-0.42571524978096387, -1.309216138996162, 0.8501491729372022], [1.538946448725346, 0.4996775693623565, 0.00037865771973821793], [1.5387369924811702, -0.5003223512376653, 3.964734842487605e-05], [-1.5387369924811702, 0.5003223512376653, -3.964734842487605e-05], [-1.538946448725346, -0.4996775693623565, -0.00037865771973821793], [-0.688273380108343, 0.4996775693623565, 1.3764577979946422], [-0.6884828363525187, -0.5003223512376653, 1.3761187876233287], [1.1135701062666141, 0.808495290644226, 0.8510763609602638], [1.1132311989443822, -0.8095385696338055, 0.8505278306569404], [0.2628478320698681, 0.808495290644226, 1.3766918213355428], [0.26250892474763604, -0.8095385696338055, 1.3761432910322193], [0.8507222741967461, 0.0, -0.525615460375279], [0.2631064938937868, 0.8091400725195348, -0.5254210843828031], [0.26276758657155475, -0.8088937877584967, -0.5259696146861268], [-0.6880147182844242, 0.5003223512376653, -0.5256551077237038], [-0.6882241745285999, -0.4996775693623565, -0.5259941180950172]];

    // Convex hull for inner set (I)
    module inner_hull() {
        hull() {
            for (p = inner_points) {
                translate(p) sphere(r=0.1);
            }
        }
    }

    // Convex hull for outer set (O) minus inner hull (O \ I)
    module outer_minus_inner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            inner_hull(); // Subtract inner hull
        }
    }

    // Convex hull for outer set (O) minus all translated inner hulls
    module outer_minus_AllTranslationInner() {
        difference() {
            hull() {
                for (p = outer_points) {
                    translate(p) sphere(r=0.1);
                }
            }
            hull() {
                translate([0,0,50]) inner_hull();
                translate([0,0,-50]) inner_hull();
            }; // Subtract translated inner hulls
        }
    }

    // Difference between outer_minus_inner and outer_minus_AllTranslationInner
    module outer_minus_inner_diff() {
        difference() {
            // Outer minus inner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                inner_hull();
            }

            // Subtract Outer minus AllTranslationInner
            difference() {
                hull() {
                    for (p = outer_points) {
                        translate(p) sphere(r=0.1);
                    }
                }
                hull() {
                    translate([0,0,50]) inner_hull();
                    translate([0,0,-50]) inner_hull();
                };
            }
        }
    }

    // Rendering all with colors applied
    color([1, 0, 0, 0.5]) inner_hull(); // Transparent red
    color([0, 1, 0, 1]) outer_minus_AllTranslationInner(); // Opaque green
    color([1, 1, 0, 1]) outer_minus_inner_diff(); // Opaque yellow
    